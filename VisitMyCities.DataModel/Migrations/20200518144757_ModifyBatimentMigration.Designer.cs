// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VisitMyCities.DataModel.DataAccessLayer;

namespace VisitMyCities.DataModel.Migrations
{
    [DbContext(typeof(VisitMyCitiesContext))]
    [Migration("20200518144757_ModifyBatimentMigration")]
    partial class ModifyBatimentMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VisitMyCities.DataModel.BusinessObjects.Batiment", b =>
                {
                    b.Property<int>("BatimentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateConstruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionBatiment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<bool?>("MonumentHistorique")
                        .HasColumnType("bit");

                    b.Property<string>("NomBatiment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeBatiment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URLPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VilleId")
                        .HasColumnType("int");

                    b.HasKey("BatimentId");

                    b.HasIndex("VilleId");

                    b.ToTable("Batiment");
                });

            modelBuilder.Entity("VisitMyCities.DataModel.BusinessObjects.DetailArchitectural", b =>
                {
                    b.Property<int>("DetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BatimentId")
                        .HasColumnType("int");

                    b.Property<string>("DescriptionDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomDetail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DetailId");

                    b.HasIndex("BatimentId");

                    b.ToTable("DetailArchitectural");
                });

            modelBuilder.Entity("VisitMyCities.DataModel.BusinessObjects.Ville", b =>
                {
                    b.Property<int>("VilleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomDepartement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomRegion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomVille")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumDepartement")
                        .HasColumnType("int");

                    b.HasKey("VilleId");

                    b.ToTable("Ville");
                });

            modelBuilder.Entity("VisitMyCities.DataModel.BusinessObjects.Batiment", b =>
                {
                    b.HasOne("VisitMyCities.DataModel.BusinessObjects.Ville", "Ville")
                        .WithMany("Batiments")
                        .HasForeignKey("VilleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VisitMyCities.DataModel.BusinessObjects.DetailArchitectural", b =>
                {
                    b.HasOne("VisitMyCities.DataModel.BusinessObjects.Batiment", "Batiment")
                        .WithMany("Details")
                        .HasForeignKey("BatimentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
